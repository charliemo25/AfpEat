@model AfpEat.Models.PanierModel

@{
    ViewBag.Title = "Panier";
    string isConnected = (Session["Utilisateur"] != null) ? "true" : "false";

}
<section id="Panier" class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col"> </th>
                            <th scope="col">Produit</th>
                            <th scope="col" class="text-center">Quantité</th>
                            <th scope="col" class="text-left">Prix</th>
                            <th> </th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Affichage des menus -->
                        @if (Model != null && Model.Where(m => m.GetIdMenu() > 0).Count() > 0)
                        {
                            foreach (AfpEat.Models.MenuPanier menuPanier in Model.Where(m => m.GetIdMenu() > 0))
                            {
                                <tr>
                                    <td><img src="/Images/@menuPanier.Photo" width="50" height="50" /> </td>
                                    <td class="produitMenu">
                                        @menuPanier.Nom
                                        <ul class="list-group">
                                            @foreach (AfpEat.Models.ProduitPanier produit in menuPanier.Produits)
                                            {
                                                <li class="list-group-item" data-idProduit="@produit.IdProduit">@produit.Nom</li>
                                            }
                                        </ul>
                                    </td>
                                    <td class="text-center qte">@menuPanier.Quantite</td>
                                    <td class="text-left prix">
                                        @String.Format(System.Globalization.CultureInfo.GetCultureInfo("fr-FR"), "{0:C}", (menuPanier.Prix * menuPanier.Quantite))
                                    </td>
                                    <td class="text-right">
                                        <button type="button" class="btnAddProduit btn btn-outline-success"><i class="fas fa-plus"></i></button>
                                        <button data-idMenu="@menuPanier.IdMenu" class="btnSupprMenu btn btn-outline-danger ml-2"><i class="fas fa-minus"></i> </button>
                                    </td>
                                </tr>
                            }
                        }
                        <!-- Affichage des produits -->
                        @if (Model != null && Model.Where(m => m.GetIdProduit() > 0).Count() > 0)
                        {
                            foreach (AfpEat.Models.ProduitPanier produit in Model.Where(p => p.GetIdProduit() > 0 && p.GetIdMenu() == 0))
                            {
                                <tr>
                                    <td><img src="/Images/@produit.Photo" width="50" height="50" /> </td>
                                    <td>@produit.Nom</td>
                                    <td class="text-center qte">@produit.Quantite</td>
                                    <td class="text-left prix">
                                        @String.Format(System.Globalization.CultureInfo.GetCultureInfo("fr-FR"), "{0:C}", (produit.Prix * produit.Quantite))
                                    </td>
                                    <td class="text-right">
                                        <button type="button" class="btnAddProduit btn btn-outline-success"><i class="fas fa-plus"></i></button>
                                        <button data-idProduit="@produit.IdProduit" class="btnSupprProduit btn btn-outline-danger ml-2"><i class="fas fa-minus"></i> </button>
                                    </td>
                                </tr>
                            }
                        }
                        <tr>
                            <td></td>
                            <td class="text-right"><strong>Total</strong></td>
                            @if (Model != null)
                            {
                                <td id="QuantiteTotal" class="text-center">
                                    @Model.Quantite
                                </td>
                                <td class="text-left" id="PrixTotal">
                                    <strong>
                                        @String.Format(System.Globalization.CultureInfo.GetCultureInfo("fr-FR"), "{0:C}", Model.Montant)
                                    </strong>
                                </td>
                            }
                            else
                            {
                                <td class="text-center">
                                    0
                                </td>
                                <td class="text-right">
                                    <strong>
                                        0,00 €
                                    </strong>
                                </td>
                            }
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col mb-2">
            <div class="row">
                @if (Model != null && Model.Count() > 0)
                {
                    <div class="col-sm-12  col-md-6">
                        <a href="@Url.Action("Details/"+Model.First().IdRestaurant , "Restaurants")" class="btn btn-block btn-lg btn-outline-dark">Retour au restaurant</a>
                    </div>
                    <div class="col-sm-12 col-md-6 text-right">
                        <button id="btnCommande" class="btn btn-lg btn-block btn-outline-success">Passer la commande</button>
                    </div>
                }
                else
                {
                    <div class="col-sm-12  col-md-6">
                        <a href="@Url.Action("Index", "Home")" class="btn btn-block btn-lg btn-outline-dark">Retour à l'accueil</a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script type="text/javascript">

    function ConvertEuro(float) {
        return new Intl.NumberFormat("fr-FR", { style: "currency", currency: "EUR" }).format(float);
    }

    function PasserCommande() {

        let data = { 'idSession':'@Session.SessionID'};

        $.ajax({
            url: "@Url.Action("SaveCommande", "Sw")",
            type: "Post",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            data: JSON.stringify(data),
            error: function (result) {
                console.log('erreur');
            },
            success: function (result)
            {
                if (result.statut) {
                    //Changer la redirection pour un récapitulatif de la commande
                    document.location.href = '@Url.Action("Index", "Home")';
                }
                else {
                    console.log(result.message);
                }
            }
        });
    }

    function SetCol(element, add) {

        let quantite = $(element).parent().prevAll('.qte').text();
        let prix = $(element).parent().prevAll('.prix').text();
        let prixUnique = parseFloat(prix.replace(',', '.')) / quantite;
        prix = parseFloat(prix.replace(',', '.'));

        if (add) {
            if (quantite <= 1) {
                $(element).parent().parent().html('');
            }
            else {
                quantite--;
                $(element).parent().prevAll('.qte').text(quantite);
                $(element).parent().prevAll('.prix').text(ConvertEuro(prix - prixUnique));
            }
        } else if (!add) {
            quantite++;
            $(element).parent().prevAll('.qte').text(quantite);
            $(element).parent().prevAll('.prix').text(ConvertEuro(prix + prixUnique));
        }
    }


$(document).ready(function () {

        //Suppresion d'un menu
        $(".btnSupprMenu").click(function () {
            let idMenu = $(this).attr('data-idMenu');
            let idProduits = [];

            $.each($(this).parent().prevAll('.produitMenu').find('ul li'), function (k, v) {
                idProduits.push($(v).data('idproduit'));
            });


            SetCol($(this));
            RemoveMenu(idMenu, idProduits);
        });

        //Suppression d'un produit
        $(".btnSupprProduit").click(function () {
            let produit = $(this).data('idproduit');

            SetCol($(this), false);
            RemoveProduit(produit);
        });

        //Ajout d'un produit
        $(".btnAddProduit").click(function () {

            let produit = $(this).data('idproduit');
            
            SetCol($(this), true);
            AddProduit(produit);


        });

        $("#btnCommande").click(function () {

            if (@isConnected) {
                PasserCommande();
            } else {
                console.log("non connecté");
            }
        });

        $("#btnConnexion").click(function () {

        });

    });
    </script>
}