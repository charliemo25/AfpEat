@{
    AfpEat.Models.Utilisateur user = (AfpEat.Models.Utilisateur)Session["utilisateur"];
    AfpEat.Models.PanierModel panier = (AfpEat.Models.PanierModel)HttpContext.Current.Application[Session.SessionID] ?? new AfpEat.Models.PanierModel();

    string montant = String.Format(System.Globalization.CultureInfo.GetCultureInfo("fr-FR"), "{0:C}", panier.Montant);

}


<!DOCTYPE html>
<html class="h-100">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - AfpEat</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body class="d-flex flex-column h-100">
    <!-- Navbar -->
    <nav class="navbar navbar-dark bg-custom-afpa navbar-expand-sm pl-5 pr-5 mb-5 fixed-top">
        <a class="navbar-brand" href="@Url.Action("Index", "Home")">
            <img src="~/Images/logo-afpa.jpg" height="30" alt="logo">
            AfpEat
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-list-3" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbar-list-3">
            <!-- Partie gauche-->
            <ul class="navbar-nav">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Restaurant
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="@Url.Action("Index", "Home")">Liste des Restaurants</a>
                        <a class="dropdown-item" href="@Url.Action("Index", "Produits")">Liste des Produits</a>
                        <a class="dropdown-item" href="@Url.Action("Historique", "Utilisateurs")">Historique de l'utilisateur</a>

                    </div>
                </li>

            </ul>
            <!-- Partie droite -->
            <div class="ml-auto">
                @if (user != null)
                {
                    <text>
                        <!-- Modifier pour afficher le profil -->
                        <a href="#" class="text-reset mr-3">
                            <i class="fas  fa-user "></i> @user.Prenom, votre solde: @user.Solde€
                        </a>
                    </text>
                }
                else
                {
                    <text>
                        <a href="@Url.Action("Connexion", "Utilisateurs")" class="btn btn-outline-dark mr-3">
                            <i class="fas  fa-user "></i> Se connecter
                        </a>
                    </text>
                }
            <a href="@Url.Action("Panier", "Home")" class="text-reset mr-3">
                <i class="fas  fa-shopping-cart"></i> Votre Total: (@panier.Quantite)  <span id="PanierTotal">@montant</span>
            </a>
            </div>
        </div>
    </nav>
    <div class="container-fluid body-content mt-5">
        @RenderBody()

    </div>
    <hr />
    <footer class="mt-auto">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <p>&copy; @DateTime.Now.Year - AfpEat</p>
                </div>
            </div>
        </div>
    </footer>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

<script type="text/javascript">

    //Paramètres par défaut de bootstrap-notify
    $.notifyDefaults(
        {
            
        },
        {
            placement:
            {
	    	    from: "bottom",
		        align: "left"
	        }
        }
    );

    //permet de définir l'alert
    function notify(result) {

        let type = result.statut ? 'success' : 'danger';

        let notify = $.notify(
            {
                message: result.message
            },
            {
	            type: type
            }
        );
        return notify;
    }

    function AddProduit(idProduit) {

            let data = { 'idProduit': idProduit, 'idSession': '@Session.SessionID' };

            $.ajax({
                    url: "@Url.Action("AddProduit", "Sw")",
                    type: "Post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    data: JSON.stringify(data),
                    error: function (result) {
                        console.log('erreur')
                    },
                    success: function (result)
                    {
                        notify(result);
                        $('#PanierTotal').text(result.montant);
                    }
                });
        }

        function AddMenu(idMenu, arrayIdProduit, idRestaurant) {
            let data = { 'idRestaurant': idRestaurant, 'idMenu': idMenu, 'idProduits': arrayIdProduit, 'idSession': '@Session.SessionID' };
            console.log(data);

            $.ajax({
                    url: "@Url.Action("AddMenu", "Sw")",
                    type: "Post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    data: JSON.stringify(data),
                    error: function (result) {
                        console.log('erreur')
                    },
                    success: function (result)
                    {
                        notify(result);
                        $('#PanierTotal').text(result.montant);
                    }
            });
        }

    function RemoveProduit(idProduit) {

            let data = { 'idProduit': idProduit, 'idSession': '@Session.SessionID' };

            $.ajax({
                    url: "@Url.Action("RemoveProduit", "Sw")",
                    type: "Post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    data: JSON.stringify(data),
                    error: function (result) {
                        console.log('erreur')
                    },
                    success: function (result)
                    {
                        notify(result);
                        $('#PanierTotal').text(result.montant);
                    }
                });
    }

    function RemoveMenu(idMenu, arrayIdProduit) {
            let data = { 'idMenu': idMenu, 'idProduits': arrayIdProduit, 'idSession': '@Session.SessionID' };
            console.log(data);

            $.ajax({
                    url: "@Url.Action("RemoveMenu", "Sw")",
                    type: "Post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    data: JSON.stringify(data),
                    error: function (result) {
                        console.log('erreur');
                    },
                    success: function (result)
                    {
                        notify(result);
                        $('#PanierTotal').text(result.montant);
                    }
            });
    }

</script>
}

</body>
</html>
